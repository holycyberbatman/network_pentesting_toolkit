#!/usr/bin/python
#Nmap to Excel
#1.1 - Commented out functionality is the beginning of sorting port numbers.

import xlwt, xlrd, xlutils, sys
import xml.etree.ElementTree as ET 

class NmapHost:
        def __init__(self,ipaddr,p):
                self.ip = ipaddr
                self.ports = p

class NmapPort:
        def __init__(self,x,y,z):
                self.portnum = x
                self.curst = y
                self.string = z

if len(sys.argv) < 3:
        print "Usage: %s <xml input> <xls output> -f <interesting ports filename>"%(sys.argv[0])
        sys.exit()
elif len(sys.argv) == 4:
        intports = sys.argv[3].split(',')
elif len(sys.argv) == 5 and sys.argv[3] == "-f":
        with open(sys.argv[4]) as f:
                intports = f.readline().strip()
else:
        intports = []

tree = ET.parse(sys.argv[1])
root = tree.getroot()
output = xlwt.Workbook()
sheet1 = output.add_sheet('Nmap chart')
sheet1.write(0,0,'Host')
sheet1.col(0).width = 4000
coloffset = 0
hostlist = []
ports = []
portstyle = xlwt.easyxf('alignment: rotation 90')

for host in root.findall('host'):
        portlist = []
        for port in host.find('ports').findall('port'):
                portnum = port.get('portid')
                servicestr = port.find('service').get('name')
                state = port.find('state').get('state')
                if (not (state == 'tcpwrapped')) and (not (state == 'closed')):
                        portlist.append(NmapPort(portnum, state, servicestr))
                        if (not portnum in ports) and (state == 'open' or state == 'filtered'):
                                ports.append(portnum)
                                sheet1.write(0,len(ports)+coloffset,"%s (%s)"%(portnum,servicestr),portstyle)  
        if portlist:   
                hostlist.append(NmapHost(host.find('address').get('addr'), portlist))

#ports.sort()           

#for t in ports:   
#       sheet1.write(0,len(ports[0:ports.index(t)+1])+coloffset,"%s (%s)"%(t,servicestr),portstyle)
   
for i in hostlist: 
        if i.ports:
                rownum = hostlist.index(i)+1
                sheet1.write(rownum,0,i.ip)
                for j in i.ports:
                        columnnum = len(ports[0:ports.index(j.portnum)+1])+coloffset     
                        if j.curst == 'open':    
                                if j.portnum in intports:    
                                        sheet1.write(rownum,columnnum,4)    
                                else:    
                                        sheet1.write(rownum,columnnum,1)    
                        elif j.curst == 'filtered':     
                                if j.portnum in intports:    
                                        sheet1.write(rownum,columnnum,3)    
                                else:    
                                        sheet1.write(rownum,columnnum,2)    
                                             
for i in range(0,len(ports)):    
        sheet1.col(i+2).width = 1000
    
output.save(sys.argv[2])